name: Unity Multi-Platform Auto Build

on:
  workflow_dispatch:

jobs:
  build-mac:
    name: Build for macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Activate Unity License (macOS)
        run: |
          brew install --cask unity-hub
          echo /Applications/Unity\ Hub.app/Contents/MacOS/Unity\ Hub -- --headless editors -r
          "/Applications/Unity Hub.app/Contents/MacOS/Unity Hub" --disable-gpu --headless install --version 2020.3.32f1 --changeset 12f8b0834f07 --module mac-il2cpp --architecture arm64
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Cache Library Folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-macOS-${{ github.sha }}
          restore-keys: |
            Library-macOS-

      - name: Build macOS
        uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2020.3.32f1
          targetPlatform: StandaloneOSX
          buildName: MacBuild
          buildMethod: AutoBuild.PerformMacBuild

      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: MacBuild
          path: build/StandaloneOSX

  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Activate Unity License (Windows)
        run: |
          mkdir -p "$HOME/AppData/Local/Unity/Editor"
          echo ${{ secrets.UNITY_SERIAL }} | tee "$HOME/AppData/Local/Unity/Editor/Unity_v2020.x.ulf" > /dev/null
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Cache Library Folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-Windows-${{ github.sha }}
          restore-keys: |
            Library-Windows-

      - name: Build Windows
        uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2020.3.32f1
          targetPlatform: StandaloneWindows64
          buildName: WindowsBuild
          buildMethod: AutoBuild.PerformWindowsBuild

      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: WindowsBuild
          path: build/StandaloneWindows64

  build-webgl:
    name: Build for WebGL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Activate Unity License (WebGL)
        run: |
          mkdir -p "$HOME/.local/share/unity3d/Unity/License"
          mkdir -p "$HOME/.local/share/unity3d/builds/WebGL"
          echo ${{ secrets.UNITY_SERIAL }} | tee "$HOME/.local/share/unity3d/Unity/License/Unity_v2020.x.ulf" > /dev/null
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

      - name: Cache Library Folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-WebGL-${{ github.sha }}
          restore-keys: |
            Library-WebGL-

      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2020.3.32f1
          targetPlatform: WebGL
          buildName: WebGLBuild
          buildMethod: AutoBuild.PerformWebGLBuild

      - name: Upload WebGL Build
        uses: actions/upload-artifact@v4
        with:
          name: WebGLBuild
          path: build/DiceAdventureWebGL
